<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/@types/next-auth.d.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/(root)/not-auth/page.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/(root)/profile/page.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/(root)/layout.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/(root)/loading.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/(root)/page.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/api/auth/[...nextauth]/route.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/api/blop/del/[url]/route.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/api/users/route.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/actions.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/globals.css;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/app/layout.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/constants/auth-options.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/form/form-input.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/form/form-textarea.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/form/index.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/lib/get-user-session.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/lib/utils.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/modals/auth-modal/forms/login-form.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/modals/auth-modal/forms/register-form.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/modals/auth-modal/forms/schemas.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/modals/auth-modal/auth-modal.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/modals/auth-modal/index.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/modals/index.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/button.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/checkbox.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/dialog.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/drawer.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/dropdown-menu.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/index.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/input.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/label.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/popover.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/select.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/sheet.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/skeleton.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/slider.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/table.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/ui/textarea.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/buttonTheme.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/clear-button.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/container.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/error-text.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/header.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/HEROES_CLIENT.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/index.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/info-block.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/profile-button.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/profile-form.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/providers.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/required-symbol.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/theme-provider.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components/title.tsx;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/prisma/constants.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/prisma/constants2.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/prisma/prisma-client.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/prisma/seed.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/.eslintrc.json;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/components.json;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/package.json;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/README.md;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/tailwind.config.ts;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes/tsconfig.json" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes&quot;:&quot;{\&quot;/components/ui/label.tsx\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a custom `Label` component using the `cva` (class-variance-authority) library and the `LabelPrimitive` component from the `@radix-ui/react-label` library. The `Label` component is a wrapper around the `LabelPrimitive.Root` component, with additional styles and variants applied using the `cva` library. This component can be used to create consistent and customizable label elements in a React application.\&quot;,\&quot;/prisma/migrations/20250120093640_add_login_history_field/migration.sql\&quot;:\&quot;This file appears to be a database schema definition using the Prisma ORM. It defines several tables and their relationships, but does not contain any classes or functions. The schema includes the following entities:\\n\\n`BetStatus`: An enum representing the status of a bet (OPEN, CLOSED, PENDING).\\n`UserRole`: An enum representing the role of a user (USER, ADMIN).\\n`PlayerChoice`: An enum representing the choice of a player (PLAYER1, PLAYER2).\\n`User`: A table representing a user, with fields for personal information, authentication, and user activity.\\n`Bet`: A table representing a bet, with fields for the participants, bet amounts, odds, and status.\\n`BetParticipant`: A table representing a user\\u0027s participation in a bet, with fields for the bet, user, amount, odds, and profit.\\n`GlobalData`: A table representing global data about the application, such as the number of users, points bet, and total points.\\n`Player`: A table representing a player, with a name field.\\n`Category`: A table representing a category, with a name field.\\n`Product`: A table representing a product, with a name and category.\\n`ProductItem`: A table representing a product item, with a name and associated product.\\n\\nThe schema defines the relationships between these entities, such as a user creating bets, users participating in bets, and products being associated with categories.\&quot;,\&quot;/components/modals/auth-modal/forms/schemas.ts\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines several Zod schemas for form validation:\\n\\n`passwordSchema`: A string schema that enforces a minimum length of 4 characters.\\n\\n`formLoginSchema`: An object schema that validates an email and a password.\\n\\n`formRegisterSchema`: An object schema that extends the `formLoginSchema` by adding a `fullName` field and a `confirmPassword` field, and also ensures that the `password` and `confirmPassword` fields match.\\n\\n`TFormLoginValues`: A type alias that represents the shape of the values expected by the `formLoginSchema`.\\n\\n`TFormRegisterValues`: A type alias that represents the shape of the values expected by the `formRegisterSchema`.\\n\\nThe purpose of this file is to define the validation rules for the login and registration forms of an application using the Zod library.\&quot;,\&quot;/app/(root)/layout.tsx\&quot;:\&quot;This file does not contain any classes or functions. Instead, it exports a React component called `HomeLayout` that serves as the layout for the home page of a web application. The `HomeLayout` component renders a `Header` component and the `children` prop, which represents the content of the home page. The file also sets the metadata for the page, including the title \\\&quot;HEROES 3\\\&quot;.\&quot;,\&quot;/components/globalData.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`useEffect`: Fetches initial data and sets up a real-time update mechanism using Server-Sent Events (SSE) when the component mounts.\\n\\n`fetchInitialData`: Fetches the initial global data from the server and updates the state.\\n\\n`GlobalData`: A functional component that displays a table with global data fetched from the server, including information about users, points, and other metrics. It handles loading and error states, and updates the data in real-time using SSE.\\n\\nIn summary, this file is a React component that fetches and displays global data from a server, and updates the data in real-time using a Server-Sent Events (SSE) mechanism.\&quot;,\&quot;/components/HEROES_CLIENT.tsx\&quot;:\&quot;This file is a React component that displays a list of bets and allows users to place bets on the outcomes of the matches. It uses the Prisma client to interact with the database and the SWR library for data fetching. The file also includes several helper functions and hooks to handle various aspects of the betting process.\\n\\n`Bet`: Represents a bet with information about the players, participants, and odds.\\n\\n`HEROES_CLIENT`: The main React component that renders the betting interface.\\n\\n`fetcher`: A helper function that fetches data from the specified URL.\\n\\n`handleValidation`: Validates the user\\u0027s bet input and updates the state accordingly.\\n\\n`handleAmountChange`: Handles changes to the bet amount and updates the potential profit calculations.\\n\\n`handlePlayerChange`: Handles changes to the selected player and updates the potential profit calculations.\\n\\n`handlePlaceBet`: Handles the placement of a bet and updates the user\\u0027s points and the bet data.\\n\\n`handleSubmit`: Handles the form submission for placing a bet.\\n\\n`handleCloseBet`: Handles the closing of a bet and updates the user\\u0027s points and the bet data.\&quot;,\&quot;/components/modals/auth-modal/forms/login-form.tsx\&quot;:\&quot;This file contains a React component called `LoginForm` that provides a login form for users to sign in to an application. The component uses the `react-hook-form` library to handle form validation and submission, and the `next-auth/react` library to handle the authentication process.\\n\\n`LoginForm`: A React component that renders a login form with email and password fields, and a submit button.\\n\\n`onSubmit`: A function that is called when the login form is submitted. It uses the `signIn` function from the `next-auth/react` library to authenticate the user, and displays a success or error message using the `react-hot-toast` library.\&quot;,\&quot;/hooks/useUser.ts\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`useUser`: This function uses the `useSWR` hook to fetch user data from the `/api/user/${userId}` endpoint and returns the user data, loading state, and error state, as well as a `mutate` function to update the user data.\\n\\nThe file also defines a `fetcher` function that is used by the `useSWR` hook to fetch data from the API endpoint.\&quot;,\&quot;/components/required-symbol.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`RequiredSymbol`: This function returns a React component that renders a red asterisk symbol, which can be used to indicate a required field in a form.\&quot;,\&quot;/app/api/get-global-data/route.ts\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`GET`: This function is an API route handler that fetches the most recent global data from the Prisma database and returns it as a JSON response. If there is an error fetching the data, it returns a 500 status code with an error message.\\n\\nThe file is responsible for providing an API endpoint that returns the latest global data stored in the Prisma database.\&quot;,\&quot;/app/api/get-bets/route.ts\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`GET`: This function handles a GET request and retrieves a list of bets from the database, optionally filtering by a specified status parameter. It then returns the bets as a JSON response.\\n\\nIn summary, this file is a Next.js API route that provides an endpoint to fetch a list of bets from a Prisma-powered database, with the ability to filter the results by the bet status.\&quot;,\&quot;/components/buttonTheme.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`ModeToggle`: This function renders a dropdown menu that allows the user to toggle between light, dark, and system themes.\\n\\nThe file as a whole provides a reusable React component for a theme toggle button that integrates with the `next-themes` library to allow the user to switch between different theme modes.\&quot;,\&quot;/app/layout.tsx\&quot;:\&quot;This file is the root layout component for a Next.js application. It sets up the HTML structure, imports the Nunito font, and provides a wrapper component called `Providers` that wraps the main content.\\n\\n`Nunito`: Defines the Nunito font with various weight options and sets it as a CSS variable.\\n\\n`RootLayout`: Renders the HTML structure, including the `\\u003chead\\u003e` and `\\u003cbody\\u003e` elements, and wraps the main content with the `Providers` component.\&quot;,\&quot;/components/info-block.tsx\&quot;:\&quot;This file defines a React component called `InfoBlock` that displays an informational block with a title, text, and an optional image. The component also includes two buttons: one to navigate back to the home page and another to update the information.\\n\\n`InfoBlock`: A React component that displays an informational block with a title, text, and an optional image, as well as two buttons for navigation and updating the information.\\n\\n`cn`: A utility function that combines CSS class names based on the provided conditions.\&quot;,\&quot;/app/(root)/bet-closed/page.tsx\&quot;:\&quot;This file is a Next.js server-side component that retrieves the user\\u0027s session, checks if the user is authenticated, and then fetches the user\\u0027s closed bets from the Prisma database. The component then renders the `HEROES_CLIENT_CLOSED` component, which displays the closed bets.\\n\\n`getUserSession`: Retrieves the user\\u0027s session from the server.\\n`Home`: Fetches the user\\u0027s closed bets and renders the `HEROES_CLIENT_CLOSED` component.\&quot;,\&quot;/components/modals/index.ts\&quot;:\&quot;This file does not contain any classes or functions. It simply exports the `AuthModal` component from the `./auth-modal` file, which is likely a reusable component that handles the authentication modal functionality in the application.\&quot;,\&quot;/app/(root)/page.tsx\&quot;:\&quot;This file is a Next.js server-side component that serves as the home page of an application. It performs the following tasks:\\n\\n`Home`: This is the main function that handles the rendering of the home page. It first checks if the user has a valid session, and if so, it retrieves the user\\u0027s information from the database and renders the `HEROES_CLIENT` component with the user data. If the user is not authenticated, it redirects the user to the \\\&quot;not-auth\\\&quot; page.\\n\\n`getUserSession`: This function retrieves the user\\u0027s session information.\\n\\n`GlobalData`: This component is rendered within the `Home` function and likely provides global data or context to the application.\\n\\n`HEROES_CLIENT`: This component is rendered within the `Home` function and likely displays a list of heroes or some other content related to the application\\u0027s main functionality.\&quot;,\&quot;/components/HEROES_CLIENT_CLOSED.tsx\&quot;:\&quot;This file is a React component that displays a list of closed bets with information about the participants, the winner, and the user\\u0027s bets. It uses the Accordion and Table components from the UI library.\\n\\n`BetParticipantCLOSED`: An interface that defines the structure of a closed bet participant.\\n\\n`BetCLOSED`: An interface that defines the structure of a closed bet.\\n\\n`Props`: An interface that defines the props for the `HEROES_CLIENT_CLOSED` component.\\n\\n`HEROES_CLIENT_CLOSED`: A React functional component that renders the closed bets and the user\\u0027s bets.\&quot;,\&quot;/app/api/users/route.ts\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`GET`: This function retrieves all users from the database and returns them as a JSON response.\\n\\n`POST`: This function creates a new user in the database based on the data provided in the request body and returns the created user as a JSON response.\\n\\nThe file is an API route handler for a Next.js application, which uses the Prisma client to interact with a database and handle HTTP requests for user-related operations.\&quot;,\&quot;/components/title.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`Title`: A React functional component that renders a title with a specified size, using the appropriate HTML heading tag and applying the corresponding CSS class for the size.\\n\\nThe file also defines two constant objects, `mapTagBySize` and `mapClassNameBySize`, which map the title size to the corresponding HTML heading tag and CSS class, respectively.\\n\\nOverall, this file provides a reusable Title component that allows for easy customization of the title size and styling.\&quot;,\&quot;/prisma/prisma-client.ts\&quot;:\&quot;This file does not contain any classes or functions. Instead, it sets up a singleton instance of the `PrismaClient` from the `@prisma/client` library and exports it as the `prisma` object. The file also ensures that the `prisma` object is available globally in the application, but only in non-production environments.\\n\\nThe purpose of this file is to provide a centralized and consistent way of accessing the Prisma client throughout the application, ensuring that only one instance of the client is created and used across the entire application.\&quot;,\&quot;/components/ui/index.ts\&quot;:\&quot;This file appears to be an index file that exports various UI components from a larger library or application. It does not contain any classes or functions, but rather serves as a central point of access for the following UI components:\\n\\n`Button`: A reusable button component.\\n`Checkbox`: A reusable checkbox component.\\n`Dialog`: A reusable dialog component.\\n`Drawer`: A reusable drawer component.\\n`Input`: A reusable input field component.\\n`Popover`: A reusable popover component.\\n`Select`: A reusable select dropdown component.\\n`Skeleton`: A reusable skeleton loading component.\\n`Slider`: A reusable slider component.\\n`Textarea`: A reusable textarea component.\&quot;,\&quot;/components/ui/slider.tsx\&quot;:\&quot;This file defines a custom Slider component using the Radix UI Slider component. It provides a reusable and stylized slider control for user interfaces.\\n\\n`Slider`: A custom Slider component that extends the Radix UI Slider component and applies additional styles and classes to the slider track, range, and thumb.\\n\\n`cn`: A utility function that conditionally applies CSS classes to an element based on the provided className.\&quot;,\&quot;/components.json\&quot;:\&quot;This file appears to be a configuration file for a project using the Shadcn UI library. It does not contain any classes or functions, but rather defines various settings and aliases for the project. Here\\u0027s a summary of the contents:\\n\\n`$schema`: Specifies the schema for the Shadcn UI configuration.\\n`style`: Sets the default style for the project.\\n`rsc`: Enables the use of React Server Components.\\n`tsx`: Enables the use of TypeScript in the project.\\n`tailwind`: Configures the Tailwind CSS settings, including the location of the configuration file, the CSS file, the base color, the use of CSS variables, and the prefix.\\n`aliases`: Defines aliases for the `components` and `utils` directories, allowing them to be imported using the `@/` prefix.\\n\\nOverall, this file sets up the basic configuration for a project using the Shadcn UI library, with a focus on Tailwind CSS and TypeScript.\&quot;,\&quot;/components/ui/input.tsx\&quot;:\&quot;This file defines a React component called `Input` that represents an input field with a consistent set of styles and behaviors.\\n\\n`cn`: A utility function that concatenates CSS class names based on the provided arguments.\\n\\n`Input`: A React component that renders an `input` element with a set of predefined styles and behaviors, including rounded corners, border, background color, and focus-related styles.\&quot;,\&quot;/components/ui/select.tsx\&quot;:\&quot;This file appears to be a React component that implements a custom select dropdown using the Radix UI library. It defines several components and functions that work together to create the select dropdown functionality. Here\\u0027s a summary of each:\\n\\n`Select`: The root component that wraps the entire select dropdown.\\n\\n`SelectGroup`: A component that groups related select items together.\\n\\n`SelectValue`: A component that represents the selected value in the select dropdown.\\n\\n`SelectTrigger`: The component that renders the select dropdown trigger, including the chevron icon.\\n\\n`SelectScrollUpButton`: A button that allows the user to scroll up in the select dropdown content.\\n\\n`SelectScrollDownButton`: A button that allows the user to scroll down in the select dropdown content.\\n\\n`SelectContent`: The component that renders the select dropdown content, including the viewport and scroll buttons.\\n\\n`SelectLabel`: A component that renders a label for a group of select items.\\n\\n`SelectItem`: A component that renders a single select item, including the check mark indicator.\\n\\n`SelectSeparator`: A component that renders a separator between select items.\\n\\nOverall, this file provides a customizable and accessible select dropdown component that can be used in a React application.\&quot;,\&quot;/components/modals/auth-modal/auth-modal.tsx\&quot;:\&quot;This file defines an `AuthModal` component that renders a modal dialog for user authentication. It includes options for logging in or registering, as well as the ability to sign in using a Google account. The file also imports various UI components and utility functions from other parts of the application.\\n\\n`AuthModal`: A React component that renders a modal dialog for user authentication, allowing users to log in or register.\\n\\n`onSwitchType`: A function that toggles the authentication type between login and registration.\\n\\n`handleClose`: A function that closes the authentication modal.\&quot;,\&quot;/components/header.tsx\&quot;:\&quot;This file is a React component that represents the header of a website. It includes the following classes and functions:\\n\\n`Header`: A React functional component that renders the header of the website, including a logo, navigation links, and user authentication/profile functionality.\\n\\n`cn`: A utility function that conditionally applies CSS classes to an element.\\n\\n`DropdownMenu`: A reusable UI component that provides a dropdown menu with various options.\\n\\n`DropdownMenuContent`: A component that renders the content of the dropdown menu.\\n\\n`DropdownMenuLabel`: A component that renders a label for the dropdown menu.\\n\\n`DropdownMenuRadioGroup`: A component that renders a group of radio items in the dropdown menu.\\n\\n`DropdownMenuRadioItem`: A component that renders a single radio item in the dropdown menu.\\n\\n`DropdownMenuSeparator`: A component that renders a separator in the dropdown menu.\\n\\n`DropdownMenuTrigger`: A component that renders the trigger for the dropdown menu.\\n\\n`AuthModal`: A modal component that handles user authentication.\\n\\n`ProfileButton`: A button component that displays the user\\u0027s profile information and provides access to authentication-related actions.\\n\\n`ModeToggle`: A component that allows the user to toggle between different modes (e.g., light/dark mode).\\n\\n`Button`: A reusable UI component that renders a button.\&quot;,\&quot;/components/modals/auth-modal/forms/register-form.tsx\&quot;:\&quot;This file appears to be a React component that renders a registration form. It uses the `react-hook-form` library for form handling and the `zod` library for form validation. The file does not contain any classes, but it does have the following functions:\\n\\n`RegisterForm`: This is a functional component that renders a registration form with input fields for email, full name, password, and confirm password. It also includes a submit button and handles form submission.\\n\\nThe file also imports several other components and utilities, such as `FormProvider`, `useForm`, `zodResolver`, `toast`, `TFormRegisterValues`, `formRegisterSchema`, `FormInput`, and `Button`. However, the file does not contain the implementation of these imported functions or components.\&quot;,\&quot;/components/ui/accordion.tsx\&quot;:\&quot;This file defines a custom Accordion component using the Radix UI library. It includes the following classes and functions:\\n\\n`Accordion`: The root component for the accordion.\\n\\n`AccordionItem`: A single item within the accordion, with a border-bottom style.\\n\\n`AccordionTrigger`: The header component for an accordion item, which displays the title and a chevron icon that rotates when the item is open.\\n\\n`AccordionContent`: The content component for an accordion item, which is hidden by default and animates in and out when the item is opened and closed.\\n\\nThe file also imports utility functions from the `@/components/lib/utils` module and uses the `ChevronDown` icon from the `lucide-react` library.\&quot;,\&quot;/components/ui/popover.tsx\&quot;:\&quot;This file is a React component that implements a Popover UI element using the Radix UI library. It defines the following classes and functions:\\n\\n`Popover`: The root component that wraps the entire Popover UI element.\\n\\n`PopoverTrigger`: The component that triggers the Popover to open and close.\\n\\n`PopoverContent`: The component that renders the content of the Popover, with customizable alignment and side offset.\\n\\nThe file also imports utility functions from the `@/components/lib/utils` module and uses the `cn` function to conditionally apply CSS classes to the `PopoverContent` component.\&quot;,\&quot;/components/profile-button.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`useSession`: This is a React hook from the `next-auth/react` library that retrieves the current session information.\\n\\n`ProfileButton`: This is a React functional component that displays a button that either allows the user to sign in or provides a link to the user\\u0027s profile page, depending on whether a session is active.\\n\\nThis file defines a React component called `ProfileButton` that is used to display a button in the user interface. The button\\u0027s behavior and appearance depend on whether the user is currently signed in or not.\&quot;,\&quot;/components/container.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`Container`: A React functional component that renders a `div` element with a class name that includes a centered layout and a maximum width of 1280 pixels, with the ability to add additional class names through the `className` prop.\&quot;,\&quot;/app/api/blop/del/[url]/route.ts\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`dynamic`: This is a variable that is set to \\u0027force-dynamic\\u0027, which indicates that the page should be rendered dynamically.\\n\\n`DELETE`: This is an asynchronous function that handles the deletion of a file from the Vercel blob storage. It takes in a `Request` object and a `context` object, decodes the URL parameter, checks if the URL exists, and then deletes the file using the `del` function from the `@vercel/blob` package. It then returns a JSON response indicating the success or failure of the operation.\&quot;,\&quot;/app/api/sse-global/route.ts\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`GET`: This function sets up a Server-Sent Events (SSE) stream to continuously send updates to the client about changes in the `globalData` table in the database.\\n\\nThe file sets up two intervals:\\n1. A keep-alive interval that sends a keep-alive message to the client every 15 seconds to maintain the connection.\\n2. A check interval that checks the `globalData` table every 1 second for any changes, and if there are changes, it sends the updated data to the client.\\n\\nThe file also handles the case where the client connection is closed, and it cleans up the intervals accordingly.\&quot;,\&quot;/components/ui/drawer.tsx\&quot;:\&quot;This file defines a set of React components that create a drawer UI element. Here\\u0027s a summary of each class and function:\\n\\n`Drawer`: A wrapper component around the `DrawerPrimitive.Root` component that adds a `shouldScaleBackground` prop.\\n\\n`DrawerTrigger`: A component that triggers the opening of the drawer.\\n\\n`DrawerPortal`: A component that renders the drawer content in a portal.\\n\\n`DrawerOverlay`: A component that renders a semi-transparent overlay behind the drawer.\\n\\n`DrawerContent`: A component that renders the content of the drawer.\\n\\n`DrawerHeader`: A component that renders the header section of the drawer.\\n\\n`DrawerFooter`: A component that renders the footer section of the drawer.\\n\\n`DrawerTitle`: A component that renders the title of the drawer.\\n\\n`DrawerDescription`: A component that renders the description of the drawer.\&quot;,\&quot;/components/ui/skeleton.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`Skeleton`: A React component that renders a skeleton loader with a rounded-md and muted background, and an animate-pulse animation.\&quot;,\&quot;/components/index.ts\&quot;:\&quot;This file appears to be an index file that exports various components and utilities used in a larger application. It does not contain any classes or functions, but rather serves as a central point of access for the different parts of the application. The exported items include:\\n\\n`ProfileButton`: A button component for displaying user profile information.\\n`ProfileForm`: A form component for editing user profile information.\\n`InfoBlock`: A component for displaying informational content.\\n`ClearButton`: A button component for clearing form data.\\n`ErrorText`: A component for displaying error messages.\\n`RequiredSymbol`: A component for indicating required form fields.\\n`Container`: A layout component for containing other components.\\n`ThemeProvider`: A provider component for managing application theming.\\n`Providers`: A component that wraps the application with necessary providers.\\n`form`: Exports various form-related utilities and components.\\n`modals`: Exports various modal-related components.\&quot;,\&quot;/components/form/index.ts\&quot;:\&quot;This file exports two components:\\n\\n`FormInput`: A form input component that provides a reusable input field with customizable styles and behavior.\\n\\n`FormTextarea`: A form textarea component that provides a reusable textarea field with customizable styles and behavior.\\n\\nThe purpose of this file is to serve as a central export point for these two form-related components, making them easily accessible and usable in other parts of the application.\&quot;,\&quot;/components/lib/get-user-session.ts\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`getUserSession`: This function retrieves the user session using the `getServerSession` function from the `next-auth` library and the `authOptions` configuration, and returns the user object from the session or `null` if no session is available.\\n\\nThe purpose of this file is to provide a utility function to get the current user session, which can be used in other parts of the application.\&quot;,\&quot;/components/ui/button.tsx\&quot;:\&quot;This file defines a reusable `Button` component in a React application, using the `class-variance-authority` (CVA) library for managing button styles and variants.\\n\\n`buttonVariants`: Defines the CSS styles and variants for the button component using the CVA library.\\n\\n`Button`: A React component that renders a button with the specified styles and variants, and can optionally display a loading indicator.\&quot;,\&quot;/components/ui/sheet.tsx\&quot;:\&quot;This file defines a set of React components for creating a sheet-like UI element using the Radix UI library. Here\\u0027s a summary of the classes and functions in the file:\\n\\n`Sheet`: The root component for the sheet UI element.\\n\\n`SheetTrigger`: The component that triggers the opening of the sheet.\\n\\n`SheetClose`: The component that closes the sheet.\\n\\n`SheetPortal`: The component that renders the sheet in a portal.\\n\\n`SheetOverlay`: The component that renders the overlay behind the sheet.\\n\\n`sheetVariants`: A function that defines the CSS variants for the sheet component.\\n\\n`SheetContent`: The main content area of the sheet, with support for different positioning (top, bottom, left, right).\\n\\n`SheetHeader`: A component for rendering the header section of the sheet.\\n\\n`SheetFooter`: A component for rendering the footer section of the sheet.\\n\\n`SheetTitle`: A component for rendering the title of the sheet.\\n\\n`SheetDescription`: A component for rendering the description of the sheet.\&quot;,\&quot;/app/api/user/[userId]/route.ts\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`GET`: This function handles the GET request for the `/api/user/[userId]` route, where it retrieves the `points` field of a user from the database based on the provided `userId` parameter.\\n\\nIn summary, this file is a Next.js API route handler that fetches user data from a database and returns it as a JSON response.\&quot;,\&quot;/components/ui/form.tsx\&quot;:\&quot;This file appears to be a React component library that provides a set of form-related components and utilities. It uses the `react-hook-form` library to manage form state and validation. Here\\u0027s a list of the classes and functions in the file:\\n\\n`Form`: A wrapper component that provides the form context to its children.\\n`FormField`: A component that wraps a form field and provides the field context to its children.\\n`useFormField`: A custom hook that provides access to the form field context.\\n`FormItem`: A component that wraps a form item and provides the item context to its children.\\n`FormLabel`: A component that renders a form label with error handling.\\n`FormControl`: A component that renders a form control with accessibility attributes.\\n`FormDescription`: A component that renders a form field description.\\n`FormMessage`: A component that renders a form field error message.\&quot;,\&quot;/components/ui/dialog.tsx\&quot;:\&quot;This file defines a set of React components for creating a dialog or modal window using the Radix UI library. Here\\u0027s a summary of the classes and functions in the file:\\n\\n`Dialog`: The root component for the dialog.\\n\\n`DialogTrigger`: The component that triggers the opening of the dialog.\\n\\n`DialogPortal`: The component that renders the dialog content in a portal.\\n\\n`DialogClose`: The component that closes the dialog.\\n\\n`DialogOverlay`: The component that renders the overlay behind the dialog.\\n\\n`DialogContent`: The component that renders the content of the dialog.\\n\\n`DialogHeader`: The component that renders the header section of the dialog.\\n\\n`DialogFooter`: The component that renders the footer section of the dialog.\\n\\n`DialogTitle`: The component that renders the title of the dialog.\\n\\n`DialogDescription`: The component that renders the description of the dialog.\\n\\nThe file also exports these components, allowing them to be used in other parts of the application.\&quot;,\&quot;/app/(root)/profile/page.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`ProfilePage`: This function is an asynchronous server-side component that retrieves the user session, checks if the user is authenticated, and then renders the `ProfileForm` component with the user\\u0027s data.\\n\\n`getUserSession`: This function is used to retrieve the user session from the server.\\n\\nThis file is responsible for handling the profile page of the application. It ensures that only authenticated users can access the profile page and then renders the `ProfileForm` component with the user\\u0027s data.\&quot;,\&quot;/@types/next-auth.d.ts\&quot;:\&quot;This file is a TypeScript module augmentation for the `next-auth` library, which extends the default types provided by the library to include additional user and session properties.\\n\\n`Session`: Extends the default `Session` interface to include additional user properties such as `id`, `role`, `name`, and `image`.\\n\\n`User`: Extends the default `User` interface to include additional user properties such as `id` and `role`.\\n\\n`JWT`: Extends the default `JWT` interface to include additional user properties such as `id` and `role`.\\n\\nThis file is used to customize the types used by the `next-auth` library to match the specific user data structure used in the application.\&quot;,\&quot;/app/(root)/rating/page.tsx\&quot;:\&quot;This file is a Next.js server-side component that fetches user data from a Prisma database, sorts the users by their points in descending order, and renders a `Rating` component with the sorted user data. It also checks if the user is authenticated and redirects them to the `/not-auth` page if they are not.\\n\\n`ProfilePage`: This is a server-side component that fetches user data from a Prisma database, sorts the users by their points in descending order, and renders a `Rating` component with the sorted user data.\\n\\n`getUserSession`: This function retrieves the user session from the server.\&quot;,\&quot;/components/create-bet-form.tsx\&quot;:\&quot;This file appears to be a React component that renders a form for creating a bet. It uses the `react-hook-form` library and the `zod` library for form validation. The file defines several functions and components, which are summarized as follows:\\n\\n`createBetSchema`: A Zod schema that defines the shape of the form data.\\n\\n`CreateBetForm`: A React component that renders the form for creating a bet, including fields for selecting players, setting bet amounts, and choosing a category, product, and product item. It also handles form submission and error handling.\\n\\n`onSubmit`: A function that is called when the form is submitted. It performs additional validation checks, calculates the odds, and calls the `createBet` function to create the bet.\\n\\n`setCreateBetError`: A function that sets the `createBetError` state variable, which is used to display error messages to the user.\\n\\nOverall, this file provides a reusable component for creating bets in a web application.\&quot;,\&quot;/package.json\&quot;:\&quot;This file appears to be a package.json file for a Next.js application. It does not contain any classes or functions, but rather lists the dependencies, devDependencies, and scripts for the project. The file sets up the development and build environment for the Next.js application, including the use of Prisma for database management and various Radix UI components for the user interface.\&quot;,\&quot;/app/(root)/not-auth/page.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`UnauthorizedPage`: This function returns a React component that displays an `InfoBlock` component with a message indicating that the current page is only accessible to authorized users.\&quot;,\&quot;/components/lib/utils.ts\&quot;:\&quot;This file does not contain any classes. It exports a single function:\\n\\n`cn`: This function takes one or more class values as input, merges them using the `twMerge` function from the `tailwind-merge` library, and returns the merged class value.\\n\\nThe purpose of this file is to provide a utility function `cn` that simplifies the process of conditionally applying CSS classes to HTML elements. This function helps to maintain a consistent and readable way of applying styles in a Tailwind CSS-based project.\&quot;,\&quot;/components/constants/auth-options.ts\&quot;:\&quot;This file is a configuration for the NextAuth.js authentication library in a Next.js application. It sets up various authentication providers, including Google, GitHub, and a custom credentials provider. It also includes functions to check for VPN usage, update user login history, and handle user sign-in and token/session management.\\n\\n`checkVPN`: Checks if a given IP address is associated with a VPN or proxy.\\n\\n`updateLoginHistory`: Updates the login history for a user, including information about the IP address and whether a VPN was used.\\n\\n`authOptions`: Configures the NextAuth.js options, including the authentication providers, session management, and callback functions for sign-in, token, and session handling.\&quot;,\&quot;/app/api/auth/[...nextauth]/route.ts\&quot;:\&quot;This file does not contain any classes or functions. Instead, it sets up the authentication options for a Next.js application using the `next-auth` library. The file exports a request handler function that can handle both GET and POST requests for authentication-related endpoints. The `authOptions` object, which is imported from a separate file, likely contains the configuration settings for the authentication provider(s) used in the application.\&quot;,\&quot;/app/api/close-bet/route.ts\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`closeBetSchema`: A Zod schema that defines the expected shape of the request body for closing a bet.\\n\\n`POST`: An asynchronous function that handles a POST request to close a bet. It performs the following tasks:\\n1. Validates the request body using the `closeBetSchema`.\\n2. Finds the bet to be closed and checks its status.\\n3. Verifies that the provided winner ID matches one of the participants.\\n4. Updates the bet status to \\u0027CLOSED\\u0027 and sets the winner ID.\\n5. Calculates and updates the points for the winning participant.\\n6. Returns a JSON response with the updated bet information.\\n\\nThe file also imports the `NextResponse` from the `next/server` module, the `prisma` client from `@/prisma/prisma-client`, and the `z` module from `zod`.\&quot;,\&quot;/components/ui/dropdown-menu.tsx\&quot;:\&quot;This file appears to be a React component that implements a dropdown menu using the Radix UI library. It defines several components and functions that can be used to create a customizable dropdown menu with various features such as sub-menus, checkboxes, radio buttons, and more. Here\\u0027s a summary of each class and function:\\n\\n`DropdownMenu`: The root component that wraps the entire dropdown menu.\\n\\n`DropdownMenuTrigger`: The component that triggers the dropdown menu to open.\\n\\n`DropdownMenuGroup`: A component that groups related dropdown menu items.\\n\\n`DropdownMenuPortal`: A component that renders the dropdown menu content in a portal.\\n\\n`DropdownMenuSub`: A component that represents a sub-menu within the dropdown menu.\\n\\n`DropdownMenuRadioGroup`: A component that manages radio button-style dropdown menu items.\\n\\n`DropdownMenuSubTrigger`: A component that triggers a sub-menu to open.\\n\\n`DropdownMenuSubContent`: The content of a sub-menu.\\n\\n`DropdownMenuContent`: The content of the dropdown menu.\\n\\n`DropdownMenuItem`: A single item in the dropdown menu.\\n\\n`DropdownMenuCheckboxItem`: A dropdown menu item with a checkbox.\\n\\n`DropdownMenuRadioItem`: A dropdown menu item with a radio button.\\n\\n`DropdownMenuLabel`: A label for a group of dropdown menu items.\\n\\n`DropdownMenuSeparator`: A separator between dropdown menu items.\\n\\n`DropdownMenuShortcut`: A component that displays a shortcut for a dropdown menu item.\&quot;,\&quot;/components/ui/checkbox.tsx\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a custom Checkbox component using the Radix UI Checkbox Primitive. The Checkbox component is a reusable React component that provides a stylized checkbox input with a custom indicator (a check icon) and various accessibility-focused styles and behaviors.\\n\\nThe file exports the `Checkbox` component, which can be used in other parts of the application to provide a consistent and visually appealing checkbox input.\&quot;,\&quot;/app/(root)/loading.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`Loading`: This function returns a `div` element with a centered loading message.\&quot;,\&quot;/tsconfig.json\&quot;:\&quot;This file appears to be a TypeScript configuration file for a Next.js project. It does not contain any classes or functions, but rather a set of compiler options and include/exclude directives for the TypeScript compiler.\\n\\nThe main purpose of this file is to configure the TypeScript compiler settings for the Next.js project, including:\\n\\n- Specifying the target ECMAScript version (ES2017)\\n- Enabling support for DOM, DOM Iterable, and the latest ECMAScript features\\n- Allowing JavaScript files to be included in the project\\n- Enabling strict type checking\\n- Configuring module resolution and JSON module support\\n- Preserving JSX syntax\\n- Enabling incremental compilation\\n- Defining path aliases for the `@` directory\\n- Specifying the files and directories to include and exclude from the compilation process.\\n\\nThis configuration ensures that the TypeScript compiler is set up correctly for the Next.js project, allowing for type-safe development and seamless integration with the Next.js framework.\&quot;,\&quot;/components/clear-button.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`ClearButton`: A React functional component that renders a button with an \\u0027X\\u0027 icon, which can be used to clear or close some content on the page.\&quot;,\&quot;/app/(root)/bet-create/page.tsx\&quot;:\&quot;This file is a Next.js server-side component that handles the creation of a bet. It fetches the necessary data from the Prisma database, including the user, categories, products, product items, and players, and then renders the `CreateBetForm` component with the fetched data. If the user is not authenticated, the component redirects the user to the `/not-auth` page.\\n\\n`fetchData`: Fetches the necessary data from the Prisma database and returns it as an object.\\n\\n`CreateBetPage`: Renders the `CreateBetForm` component with the fetched data, and handles the case where the user is not authenticated.\&quot;,\&quot;/tailwind.config.ts\&quot;:\&quot;This file is a Tailwind CSS configuration file that defines the styles and theme for a web application. It does not contain any classes or functions, but rather a configuration object that specifies the following:\\n\\n`config`: This object defines the configuration for the Tailwind CSS framework, including the content to be processed, the color palette, border radius, and animation styles.\\n\\nThe configuration includes the following properties:\\n\\n- `darkMode`: Specifies that the dark mode should be applied to the application.\\n- `content`: Specifies the directories and file types to be processed by Tailwind CSS.\\n- `prefix`: Specifies the prefix to be used for all Tailwind CSS classes.\\n- `theme`: Defines the theme for the application, including the container, colors, border radius, and animation styles.\\n\\nOverall, this file sets up the Tailwind CSS configuration for a web application, providing a consistent and customizable styling system.\&quot;,\&quot;/app/api/sse/route.ts\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`GET`: This function sets up a server-sent events (SSE) stream to continuously send updates to the client about changes in the `Bet` table in the database.\\n\\nThe file sets up two intervals:\\n1. A keep-alive interval that sends a keep-alive message to the client every 15 seconds to maintain the connection.\\n2. A check interval that checks the `Bet` table every 1 second for any changes and sends those changes to the client.\\n\\nThe file also handles the case where the client closes the connection by clearing the intervals and closing the stream.\&quot;,\&quot;/components/modals/auth-modal/index.ts\&quot;:\&quot;This file does not contain any classes or functions. It simply exports the `AuthModal` component from the `./auth-modal` file, which is likely a reusable component that handles the authentication modal functionality in the application.\&quot;,\&quot;/components/error-text.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`ErrorText`: A React functional component that renders a paragraph element with the provided text and applies the \\u0027text-red-500 text-sm\\u0027 class along with any additional classes passed through the `className` prop.\\n\\nThe file also imports the `cn` utility function from the `@/components/lib/utils` module, which is likely used for conditionally applying CSS classes.\&quot;,\&quot;/app/actions.ts\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`updateGlobalData`: Updates the global data, including the number of users participating in open bets, the total bet amount in open bets, the number of registered users, the total starting points, the total points of all users, and the total margin from closed bets.\\n\\n`updateUserInfo`: Updates the user\\u0027s information, including their full name, email, and password.\\n\\n`clientCreateBet`: Creates a new bet, setting its initial parameters and updating the global data.\\n\\n`calculateOdds`: Calculates the odds for the two players in a bet based on the total bet amounts.\\n\\n`calculateMaxBets`: Calculates the maximum bet amounts for the two players in a bet.\\n\\n`placeBet`: Allows a user to place a bet, updating the bet\\u0027s details and the user\\u0027s points.\\n\\n`closeBet`: Closes a bet, updating the bet\\u0027s status, creating a record in the BetCLOSED table, and redistributing the points among the participants.\\n\\nThis file provides the server-side functionality for managing bets, including creating, placing, and closing bets, as well as updating global and user-specific data.\&quot;,\&quot;/components/providers.tsx\&quot;:\&quot;This file is a React component that serves as a provider for various features in a Next.js application. It includes the following:\\n\\n`Providers`: A React functional component that wraps the application with the necessary providers, including `SessionProvider`, `ThemeProvider`, and other utility components like `Toaster` and `NextTopLoader`.\\n\\n`useEffect`: A React hook that is used to initialize the theme state and check for a stored theme in the user\\u0027s local storage.\\n\\n`useState`: A React hook that is used to manage the `mounted` state and the `theme` state.\\n\\nOverall, this file sets up the necessary providers and utilities for the application, allowing for features like authentication, theming, and loading indicators to be used throughout the application.\&quot;,\&quot;/components/ui/table.tsx\&quot;:\&quot;This file defines a set of React components for creating a table with a header, body, footer, and various table elements such as rows, cells, and captions.\\n\\n`Table`: A wrapper component that provides a responsive table with overflow handling.\\n\\n`TableHeader`: A component that represents the table header, with a border-bottom style.\\n\\n`TableBody`: A component that represents the table body, with the last row having no border.\\n\\n`TableFooter`: A component that represents the table footer, with a top border and a muted background.\\n\\n`TableRow`: A component that represents a table row, with hover and selected state styles.\\n\\n`TableHead`: A component that represents a table header cell, with left alignment, medium font weight, and muted foreground color.\\n\\n`TableCell`: A component that represents a table cell, with padding and alignment.\\n\\n`TableCaption`: A component that represents a table caption, with a muted foreground color.\&quot;,\&quot;/.eslintrc.json\&quot;:\&quot;This file appears to be a configuration file for a Next.js project, specifically a `.eslintrc.json` file. It does not contain any classes or functions, but rather defines a set of rules for the ESLint linter to use when analyzing the project\\u0027s code.\\n\\nThe file has the following configuration:\\n\\n`\\\&quot;extends\\\&quot;: \\\&quot;next/core-web-vitals\\\&quot;`: This extends the default ESLint configuration provided by the Next.js framework, which includes rules for ensuring good web vitals performance.\\n\\n`\\\&quot;rules\\\&quot;: { ... }`: This section defines a set of custom rules to be applied in addition to the default Next.js configuration.\\n\\n`\\\&quot;@next/next/no-img-element\\\&quot;: \\\&quot;off\\\&quot;`: This rule disables the default Next.js rule that requires the use of the `\\u003cImage\\u003e` component instead of the standard `\\u003cimg\\u003e` element.\\n\\n`\\\&quot;jsx-a11y/alt-text\\\&quot;: \\\&quot;off\\\&quot;`: This rule disables the default ESLint rule that requires the use of `alt` text for `\\u003cimg\\u003e` elements, which is typically used for accessibility purposes.\\n\\nThe commented-out rules `\\\&quot;react/no-unescaped-entities\\\&quot;: \\\&quot;off\\\&quot;` and `\\\&quot;@next/next/no-page-custom-font\\\&quot;: \\\&quot;off\\\&quot;` are also shown, but they are not currently being used.\\n\\nOverall, this file is used to customize the ESLint configuration for a Next.js project, primarily by disabling certain rules that may not be applicable or desirable for the specific project.\&quot;,\&quot;/prisma/seed.ts\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`up()`: This function creates users, categories, products, product items, and players in the database using the Prisma client.\\n\\n`down()`: This function truncates the tables for users, categories, products, product items, and players in the database using the Prisma client.\\n\\n`main()`: This function calls the `down()` and `up()` functions to reset and populate the database, and then disconnects from the Prisma client.\\n\\nThe file is responsible for setting up the initial data in the database for a web application that involves users, categories, products, product items, and players.\&quot;,\&quot;/components/form/form-textarea.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`FormTextarea`: A React functional component that renders a textarea input field with a label, validation, and a clear button.\\n\\nThe file also imports several components and hooks from other files, including `Textarea`, `ClearButton`, `useFormContext`, and `React`. The purpose of this file is to provide a reusable textarea input component for a form, with built-in functionality for handling form state and validation using the `react-hook-form` library.\&quot;,\&quot;/components/ui/textarea.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`cn`: A utility function that takes a list of class names and returns a single string of class names.\\n\\n`Textarea`: A React component that renders a textarea element with a predefined set of styles and attributes.\\n\\nThis file exports a custom `Textarea` component that extends the functionality of the standard HTML `\\u003ctextarea\\u003e` element. The component applies a set of default styles and attributes to the textarea, and allows for additional custom styles to be applied through the `className` prop.\&quot;,\&quot;/components/form/form-input.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`useFormContext`: A React Hook that provides access to the form context, including the form state and methods.\\n\\n`FormInput`: A React functional component that renders an input field with a label, clear button, and error handling, using the `useFormContext` hook.\\n\\nThis file defines a reusable `FormInput` component that integrates with the `react-hook-form` library to handle form input fields, including validation, error handling, and clear functionality.\&quot;,\&quot;/prisma/constants.ts\&quot;:\&quot;This file does not contain any classes or functions. Instead, it exports several arrays of data:\\n\\n`categories`: An array of objects representing different categories, each with a `name` property.\\n\\n`products`: An array of objects representing different products, each with an `id`, `name`, and `categoryId` property.\\n\\n`productsItem`: An array of objects representing different items associated with each product, each with an `id`, `productId`, and `name` property.\\n\\n`players`: An array of objects representing different players, each with an `id` and `name` property.\\n\\nThis file appears to be defining the data structure for a game or application that involves different categories, products, product items, and players.\&quot;,\&quot;/components/rating.tsx\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`Rating`: This function is a React functional component that renders a rating table with user information, including their full name, points, and the date they were created.\\n\\nThe file also defines two interfaces:\\n\\n`User`: This interface defines the structure of a user object, with properties for full name, points, and creation date.\\n\\n`Props`: This interface defines the props that the `Rating` component expects, including an optional class name and an array of `User` objects.\&quot;,\&quot;/components/profile-form.tsx\&quot;:\&quot;This file appears to be a React component that displays a user\\u0027s profile information and allows the user to update their personal details. Here\\u0027s a summary of the classes and functions in the file:\\n\\n`ProfileForm`: A React component that renders a form for updating a user\\u0027s personal information, including their email, full name, and password, as well as displaying the user\\u0027s login history.\\n\\n`onSubmit`: A function that is called when the user submits the profile update form, which updates the user\\u0027s information using the `updateUserInfo` function.\\n\\n`onClickSignOut`: A function that is called when the user clicks the \\\&quot;Sign Out\\\&quot; button, which signs the user out of the application using the `signOut` function from `next-auth/react`.\\n\\nOverall, this file provides a user interface for managing a user\\u0027s profile information and login history within a Next.js application.\&quot;,\&quot;/README.md\&quot;:\&quot;This file is a README.md file for a Next.js project. It provides instructions for getting started with the project, including how to run the development server, and information about the project\\u0027s use of the Geist font. The file also includes links to the Next.js documentation and information about deploying the project to the Vercel platform.\&quot;,\&quot;/app/globals.css\&quot;:\&quot;This file appears to be a CSS stylesheet that defines styles for a web application. It does not contain any classes or functions, but rather defines various CSS variables, base styles, and utility classes. Here\\u0027s a summary of the main elements in the file:\\n\\n`@tailwind base;`, `@tailwind components;`, `@tailwind utilities;`: These directives import the base, component, and utility styles from the Tailwind CSS framework.\\n\\n`html`: Defines the base styles for the HTML element, including smooth scrolling behavior.\\n\\n`@layer base`: Defines a set of CSS variables that can be used throughout the application, including colors, typography, and other design tokens.\\n\\n`.dark`: Defines a set of CSS variables for a dark mode theme.\\n\\n`*`: Applies a border-box box-sizing model and sets the font family to Nunito.\\n\\n`.scrollbar`: Defines custom styles for the scrollbar.\\n\\n`@layer utilities`: Defines a custom utility class for text wrapping.\\n\\n`@layer base`: Applies the border-border class to all elements and sets the background and text colors based on the defined CSS variables.\\n\\n`#nprogress`: Defines styles for the NProgress loading indicator.\\n\\n`.p-4`, `.font-medium`: Utility classes for padding and font weight.\\n\\n`.table-cell-text`: A class for truncating table cell text with an ellipsis.\\n\\n`.image-container`: A class for containing and sizing images.\\n\\n`.width-5`, `.width-10`, `.width-15`: Utility classes for setting element widths.\\n\\nOverall, this file sets up the base styles and design tokens for a web application, including support for a dark mode theme and custom scrollbar styles.\&quot;,\&quot;/components/theme-provider.tsx\&quot;:\&quot;This file does not contain any classes or functions. Instead, it exports a `ThemeProvider` component that wraps the `NextThemesProvider` component from the `next-themes` library. This component is responsible for providing a theme context to the React application, allowing it to switch between different themes (e.g., light and dark mode) based on user preferences or system settings.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;//wsl.localhost/Ubuntu-24.04/home/pi/Projects/heroes&quot;:&quot;{\&quot;/@types/next-auth.d.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/@types/next-auth.d.ts\&quot;,\&quot;file_name\&quot;:\&quot;next-auth.d.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/(root)/bet-closed/page.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/app/(root)/bet-closed/page.tsx\&quot;,\&quot;file_name\&quot;:\&quot;page.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/(root)/bet-create/page.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/app/(root)/bet-create/page.tsx\&quot;,\&quot;file_name\&quot;:\&quot;page.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;fetchData\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,0],[31,1]],\&quot;indexes\&quot;:[413,1159]}]},\&quot;/app/(root)/not-auth/page.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/app/(root)/not-auth/page.tsx\&quot;,\&quot;file_name\&quot;:\&quot;page.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;UnauthorizedPage\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[2,15],[12,1]],\&quot;indexes\&quot;:[71,474]}]},\&quot;/app/(root)/profile/page.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/app/(root)/profile/page.tsx\&quot;,\&quot;file_name\&quot;:\&quot;page.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ProfilePage\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,15],[20,1]],\&quot;indexes\&quot;:[254,577]}]},\&quot;/app/(root)/rating/page.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/app/(root)/rating/page.tsx\&quot;,\&quot;file_name\&quot;:\&quot;page.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ProfilePage\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,15],[29,1]],\&quot;indexes\&quot;:[286,793]}]},\&quot;/app/(root)/layout.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/app/(root)/layout.tsx\&quot;,\&quot;file_name\&quot;:\&quot;layout.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;HomeLayout\&quot;,\&quot;method_parameters\&quot;:\&quot;({ children }: { children: React.ReactNode })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;{ children: React.ReactNode }\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,15],[21,1]],\&quot;indexes\&quot;:[266,553]}]},\&quot;/app/(root)/loading.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/app/(root)/loading.tsx\&quot;,\&quot;file_name\&quot;:\&quot;loading.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/(root)/page.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/app/(root)/page.tsx\&quot;,\&quot;file_name\&quot;:\&quot;page.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/api/auth/[...nextauth]/route.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/api/auth/[...nextauth]/route.ts\&quot;,\&quot;file_name\&quot;:\&quot;route.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/api/blop/del/[url]/route.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/api/blop/del/[url]/route.ts\&quot;,\&quot;file_name\&quot;:\&quot;route.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;DELETE\&quot;,\&quot;method_parameters\&quot;:\&quot;(request: Request, context : any)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Request\&quot;,\&quot;name\&quot;:\&quot;request\&quot;},{\&quot;type\&quot;:\&quot;any\&quot;,\&quot;name\&quot;:\&quot;context\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,7],[17,1]],\&quot;indexes\&quot;:[169,517]}]},\&quot;/app/api/close-bet/route.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/api/close-bet/route.ts\&quot;,\&quot;file_name\&quot;:\&quot;route.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;POST\&quot;,\&quot;method_parameters\&quot;:\&quot;(request: Request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Request\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,7],[73,1]],\&quot;indexes\&quot;:[282,2971]}]},\&quot;/app/api/get-bets/route.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/api/get-bets/route.ts\&quot;,\&quot;file_name\&quot;:\&quot;route.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;GET\&quot;,\&quot;method_parameters\&quot;:\&quot;(request: Request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Request\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[4,7],[38,1]],\&quot;indexes\&quot;:[194,1675]}]},\&quot;/app/api/get-global-data/route.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/api/get-global-data/route.ts\&quot;,\&quot;file_name\&quot;:\&quot;route.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;GET\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[4,7],[21,1]],\&quot;indexes\&quot;:[142,669]}]},\&quot;/app/api/sse/route.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/api/sse/route.ts\&quot;,\&quot;file_name\&quot;:\&quot;route.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;GET\&quot;,\&quot;method_parameters\&quot;:\&quot;(request: Request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Request\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,7],[75,1]],\&quot;indexes\&quot;:[104,3698]},{\&quot;method_name\&quot;:\&quot;start\&quot;,\&quot;method_parameters\&quot;:\&quot;(controller)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;controller\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,12],[67,13]],\&quot;indexes\&quot;:[444,3425]}]},\&quot;/app/api/sse-global/route.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/api/sse-global/route.ts\&quot;,\&quot;file_name\&quot;:\&quot;route.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;GET\&quot;,\&quot;method_parameters\&quot;:\&quot;(request: Request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Request\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[4,7],[73,1]],\&quot;indexes\&quot;:[136,3485]},{\&quot;method_name\&quot;:\&quot;start\&quot;,\&quot;method_parameters\&quot;:\&quot;(controller)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;controller\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,12],[65,13]],\&quot;indexes\&quot;:[476,3212]}]},\&quot;/app/api/user/[userId]/route.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/api/user/[userId]/route.ts\&quot;,\&quot;file_name\&quot;:\&quot;route.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;GET\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n    request: Request,\\r\\n    { params } : { params: Promise\\u003c{ userId: string }\\u003e }\\r\\n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Request\&quot;,\&quot;name\&quot;:\&quot;request\&quot;},{\&quot;type\&quot;:\&quot;{ params: Promise\\u003c{ userId: string }\\u003e }\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,7],[37,1]],\&quot;indexes\&quot;:[141,1441]}]},\&quot;/app/api/users/route.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/api/users/route.ts\&quot;,\&quot;file_name\&quot;:\&quot;route.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;GET\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,7],[8,1]],\&quot;indexes\&quot;:[117,275]},{\&quot;method_name\&quot;:\&quot;POST\&quot;,\&quot;method_parameters\&quot;:\&quot;(req: NextRequest)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;NextRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,7],[18,1]],\&quot;indexes\&quot;:[286,462]}]},\&quot;/app/actions.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/actions.ts\&quot;,\&quot;file_name\&quot;:\&quot;actions.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;updateGlobalData\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,7],[83,1]],\&quot;indexes\&quot;:[494,2907]},{\&quot;method_name\&quot;:\&quot;updateUserInfo\&quot;,\&quot;method_parameters\&quot;:\&quot;(body: Prisma.UserUpdateInput)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Prisma.UserUpdateInput\&quot;,\&quot;name\&quot;:\&quot;body\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[86,7],[113,1]],\&quot;indexes\&quot;:[3014,3696]},{\&quot;method_name\&quot;:\&quot;clientCreateBet\&quot;,\&quot;method_parameters\&quot;:\&quot;(formData: any)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;any\&quot;,\&quot;name\&quot;:\&quot;formData\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[115,7],[172,1]],\&quot;indexes\&quot;:[3707,6465]},{\&quot;method_name\&quot;:\&quot;calculateOdds\&quot;,\&quot;method_parameters\&quot;:\&quot;(totalWithInitPlayer1: number, totalWithInitPlayer2: number)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;totalWithInitPlayer1\&quot;},{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;totalWithInitPlayer2\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[175,0],[186,1]],\&quot;indexes\&quot;:[6537,7111]},{\&quot;method_name\&quot;:\&quot;calculateMaxBets\&quot;,\&quot;method_parameters\&quot;:\&quot;(initBetPlayer1: number, initBetPlayer2: number)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;initBetPlayer1\&quot;},{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;initBetPlayer2\&quot;}],\&quot;return_type\&quot;:\&quot;{ maxBetPlayer1: number, maxBetPlayer2: number }\&quot;,\&quot;scope\&quot;:[[189,0],[193,1]],\&quot;indexes\&quot;:[7194,7612]},{\&quot;method_name\&quot;:\&quot;placeBet\&quot;,\&quot;method_parameters\&quot;:\&quot;(formData: { betId: number; userId: number; amount: number; player: PlayerChoice })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;{ betId: number; userId: number; amount: number; player: PlayerChoice }\&quot;,\&quot;name\&quot;:\&quot;formData\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[196,7],[373,1]],\&quot;indexes\&quot;:[7683,14808]},{\&quot;method_name\&quot;:\&quot;closeBet\&quot;,\&quot;method_parameters\&quot;:\&quot;(betId: number, winnerId: number)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;betId\&quot;},{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;winnerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[379,7],[551,1]],\&quot;indexes\&quot;:[14881,20899]}]},\&quot;/app/globals.css\&quot;:{\&quot;file_path\&quot;:\&quot;/app/globals.css\&quot;,\&quot;file_name\&quot;:\&quot;globals.css\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/layout.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/app/layout.tsx\&quot;,\&quot;file_name\&quot;:\&quot;layout.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;RootLayout\&quot;,\&quot;method_parameters\&quot;:\&quot;({\\r\\n                                       children,\\r\\n                                   }: Readonly\\u003c{\\r\\n    children: React.ReactNode;\\r\\n}\\u003e)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Readonly\\u003c{\\r\\n    children: React.ReactNode;\\r\\n}\\u003e\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,15],[32,1]],\&quot;indexes\&quot;:[290,856]}]},\&quot;/components/constants/auth-options.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/components/constants/auth-options.ts\&quot;,\&quot;file_name\&quot;:\&quot;auth-options.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;checkVPN\&quot;,\&quot;method_parameters\&quot;:\&quot;(ip: string)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;string\&quot;,\&quot;name\&quot;:\&quot;ip\&quot;}],\&quot;return_type\&quot;:\&quot;Promise\\u003cboolean\\u003e\&quot;,\&quot;scope\&quot;:[[12,0],[24,1]],\&quot;indexes\&quot;:[481,953]},{\&quot;method_name\&quot;:\&quot;updateLoginHistory\&quot;,\&quot;method_parameters\&quot;:\&quot;(userId: number, ip: string, isVPN: boolean)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;userId\&quot;},{\&quot;type\&quot;:\&quot;string\&quot;,\&quot;name\&quot;:\&quot;ip\&quot;},{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;isVPN\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[27,0],[86,1]],\&quot;indexes\&quot;:[1032,3085]},{\&quot;method_name\&quot;:\&quot;authorize\&quot;,\&quot;method_parameters\&quot;:\&quot;(credentials)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;credentials\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[100,6],[129,7]],\&quot;indexes\&quot;:[3496,4159]},{\&quot;method_name\&quot;:\&quot;signIn\&quot;,\&quot;method_parameters\&quot;:\&quot;({ user, account, req }: any)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;any\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[137,4],[256,5]],\&quot;indexes\&quot;:[4279,8600]},{\&quot;method_name\&quot;:\&quot;jwt\&quot;,\&quot;method_parameters\&quot;:\&quot;({ token })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[257,4],[275,5]],\&quot;indexes\&quot;:[8607,8997]},{\&quot;method_name\&quot;:\&quot;session\&quot;,\&quot;method_parameters\&quot;:\&quot;({ session, token })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[276,4],[283,5]],\&quot;indexes\&quot;:[9004,9180]}]},\&quot;/components/form/form-input.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/form/form-input.tsx\&quot;,\&quot;file_name\&quot;:\&quot;form-input.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;onClickClear\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[26,2],[28,4]],\&quot;indexes\&quot;:[745,830]}]},\&quot;/components/form/form-textarea.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/form/form-textarea.tsx\&quot;,\&quot;file_name\&quot;:\&quot;form-textarea.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;FormTextarea\&quot;,\&quot;method_parameters\&quot;:\&quot;({ className, name, label, required, ...props })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,7],[44,2]],\&quot;indexes\&quot;:[372,1182]},{\&quot;method_name\&quot;:\&quot;onClickClear\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[25,2],[27,4]],\&quot;indexes\&quot;:[661,720]}]},\&quot;/components/form/index.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/components/form/index.ts\&quot;,\&quot;file_name\&quot;:\&quot;index.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/lib/get-user-session.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/components/lib/get-user-session.ts\&quot;,\&quot;file_name\&quot;:\&quot;get-user-session.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getUserSession\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,7],[7,2]],\&quot;indexes\&quot;:[124,255]}]},\&quot;/components/lib/utils.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/components/lib/utils.ts\&quot;,\&quot;file_name\&quot;:\&quot;utils.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;cn\&quot;,\&quot;method_parameters\&quot;:\&quot;(...inputs: ClassValue[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;ClassValue[]\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,7],[5,1]],\&quot;indexes\&quot;:[97,170]}]},\&quot;/components/modals/auth-modal/forms/login-form.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/modals/auth-modal/forms/login-form.tsx\&quot;,\&quot;file_name\&quot;:\&quot;login-form.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;LoginForm\&quot;,\&quot;method_parameters\&quot;:\&quot;({ onClose })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,7],[67,2]],\&quot;indexes\&quot;:[490,2215]},{\&quot;method_name\&quot;:\&quot;onSubmit\&quot;,\&quot;method_parameters\&quot;:\&quot;(data: TFormLoginValues)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;TFormLoginValues\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[23,2],[45,4]],\&quot;indexes\&quot;:[714,1263]}]},\&quot;/components/modals/auth-modal/forms/register-form.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/modals/auth-modal/forms/register-form.tsx\&quot;,\&quot;file_name\&quot;:\&quot;register-form.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;RegisterForm\&quot;,\&quot;method_parameters\&quot;:\&quot;({ onClose, onClickLogin })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[16,7],[64,2]],\&quot;indexes\&quot;:[511,2334]}]},\&quot;/components/modals/auth-modal/forms/schemas.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/components/modals/auth-modal/forms/schemas.ts\&quot;,\&quot;file_name\&quot;:\&quot;schemas.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/modals/auth-modal/auth-modal.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/modals/auth-modal/auth-modal.tsx\&quot;,\&quot;file_name\&quot;:\&quot;auth-modal.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;onSwitchType\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[20,6]],\&quot;indexes\&quot;:[619,714]},{\&quot;method_name\&quot;:\&quot;handleClose\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[22,4],[24,6]],\&quot;indexes\&quot;:[722,777]}]},\&quot;/components/modals/auth-modal/index.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/components/modals/auth-modal/index.ts\&quot;,\&quot;file_name\&quot;:\&quot;index.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/modals/index.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/components/modals/index.ts\&quot;,\&quot;file_name\&quot;:\&quot;index.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/accordion.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/accordion.tsx\&quot;,\&quot;file_name\&quot;:\&quot;accordion.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/button.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/button.tsx\&quot;,\&quot;file_name\&quot;:\&quot;button.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/checkbox.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/checkbox.tsx\&quot;,\&quot;file_name\&quot;:\&quot;checkbox.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/dialog.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/dialog.tsx\&quot;,\&quot;file_name\&quot;:\&quot;dialog.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/drawer.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/drawer.tsx\&quot;,\&quot;file_name\&quot;:\&quot;drawer.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/dropdown-menu.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/dropdown-menu.tsx\&quot;,\&quot;file_name\&quot;:\&quot;dropdown-menu.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/form.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/form.tsx\&quot;,\&quot;file_name\&quot;:\&quot;form.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/index.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/index.ts\&quot;,\&quot;file_name\&quot;:\&quot;index.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/input.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/input.tsx\&quot;,\&quot;file_name\&quot;:\&quot;input.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/label.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/label.tsx\&quot;,\&quot;file_name\&quot;:\&quot;label.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/popover.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/popover.tsx\&quot;,\&quot;file_name\&quot;:\&quot;popover.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/select.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/select.tsx\&quot;,\&quot;file_name\&quot;:\&quot;select.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/sheet.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/sheet.tsx\&quot;,\&quot;file_name\&quot;:\&quot;sheet.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/skeleton.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/skeleton.tsx\&quot;,\&quot;file_name\&quot;:\&quot;skeleton.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Skeleton\&quot;,\&quot;method_parameters\&quot;:\&quot;({ className, ...props }: React.HTMLAttributes\\u003cHTMLDivElement\\u003e)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;React.HTMLAttributes\\u003cHTMLDivElement\\u003e\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[2,0],[3,87]],\&quot;indexes\&quot;:[48,219]}]},\&quot;/components/ui/slider.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/slider.tsx\&quot;,\&quot;file_name\&quot;:\&quot;slider.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/table.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/table.tsx\&quot;,\&quot;file_name\&quot;:\&quot;table.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/ui/textarea.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/ui/textarea.tsx\&quot;,\&quot;file_name\&quot;:\&quot;textarea.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/buttonTheme.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/buttonTheme.tsx\&quot;,\&quot;file_name\&quot;:\&quot;buttonTheme.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ModeToggle\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,7],[30,67]],\&quot;indexes\&quot;:[334,1132]}]},\&quot;/components/clear-button.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/clear-button.tsx\&quot;,\&quot;file_name\&quot;:\&quot;clear-button.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ClearButton\&quot;,\&quot;method_parameters\&quot;:\&quot;({ onClick, className })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,7],[20,2]],\&quot;indexes\&quot;:[192,517]}]},\&quot;/components/container.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/container.tsx\&quot;,\&quot;file_name\&quot;:\&quot;container.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Container\&quot;,\&quot;method_parameters\&quot;:\&quot;({ className, children })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,7],[9,2]],\&quot;indexes\&quot;:[130,309]}]},\&quot;/components/create-bet-form.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/create-bet-form.tsx\&quot;,\&quot;file_name\&quot;:\&quot;create-bet-form.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;onSubmit\&quot;,\&quot;method_parameters\&quot;:\&quot;(values: z.infer\\u003ctypeof createBetSchema\\u003e)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;z.infer\\u003ctypeof createBetSchema\\u003e\&quot;,\&quot;name\&quot;:\&quot;values\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[54,4],[95,6]],\&quot;indexes\&quot;:[2181,3860]}]},\&quot;/components/error-text.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/error-text.tsx\&quot;,\&quot;file_name\&quot;:\&quot;error-text.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ErrorText\&quot;,\&quot;method_parameters\&quot;:\&quot;({ text, className })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,7],[10,2]],\&quot;indexes\&quot;:[147,287]}]},\&quot;/components/globalData.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/globalData.tsx\&quot;,\&quot;file_name\&quot;:\&quot;globalData.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;fetchInitialData\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[26,4],[39,6]],\&quot;indexes\&quot;:[732,1271]}]},\&quot;/components/header.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/header.tsx\&quot;,\&quot;file_name\&quot;:\&quot;header.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Header\&quot;,\&quot;method_parameters\&quot;:\&quot;({className})\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[27,7],[97,2]],\&quot;indexes\&quot;:[666,4224]}]},\&quot;/components/HEROES_CLIENT.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/HEROES_CLIENT.tsx\&quot;,\&quot;file_name\&quot;:\&quot;HEROES_CLIENT.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;handleValidation\&quot;,\&quot;method_parameters\&quot;:\&quot;(bet: Bet, amount: number, player: PlayerChoice)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Bet\&quot;,\&quot;name\&quot;:\&quot;bet\&quot;},{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;},{\&quot;type\&quot;:\&quot;PlayerChoice\&quot;,\&quot;name\&quot;:\&quot;player\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[126,4],[163,6]],\&quot;indexes\&quot;:[4357,5857]},{\&quot;method_name\&quot;:\&quot;handleAmountChange\&quot;,\&quot;method_parameters\&quot;:\&quot;(e: React.ChangeEvent\\u003cHTMLInputElement\\u003e, bet: Bet)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;React.ChangeEvent\\u003cHTMLInputElement\\u003e\&quot;,\&quot;name\&quot;:\&quot;e\&quot;},{\&quot;type\&quot;:\&quot;Bet\&quot;,\&quot;name\&quot;:\&quot;bet\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[165,4],[189,6]],\&quot;indexes\&quot;:[5865,6898]},{\&quot;method_name\&quot;:\&quot;handlePlayerChange\&quot;,\&quot;method_parameters\&quot;:\&quot;(e: React.ChangeEvent\\u003cHTMLInputElement\\u003e, bet: Bet)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;React.ChangeEvent\\u003cHTMLInputElement\\u003e\&quot;,\&quot;name\&quot;:\&quot;e\&quot;},{\&quot;type\&quot;:\&quot;Bet\&quot;,\&quot;name\&quot;:\&quot;bet\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[191,4],[215,6]],\&quot;indexes\&quot;:[6906,7955]},{\&quot;method_name\&quot;:\&quot;handlePlaceBet\&quot;,\&quot;method_parameters\&quot;:\&quot;(bet: Bet, amount: number, player: PlayerChoice)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Bet\&quot;,\&quot;name\&quot;:\&quot;bet\&quot;},{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;},{\&quot;type\&quot;:\&quot;PlayerChoice\&quot;,\&quot;name\&quot;:\&quot;player\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[217,4],[273,6]],\&quot;indexes\&quot;:[7963,10340]},{\&quot;method_name\&quot;:\&quot;handleSubmit\&quot;,\&quot;method_parameters\&quot;:\&quot;(event: React.FormEvent\\u003cHTMLFormElement\\u003e, bet: Bet)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;React.FormEvent\\u003cHTMLFormElement\\u003e\&quot;,\&quot;name\&quot;:\&quot;event\&quot;},{\&quot;type\&quot;:\&quot;Bet\&quot;,\&quot;name\&quot;:\&quot;bet\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[275,4],[311,6]],\&quot;indexes\&quot;:[10348,11603]},{\&quot;method_name\&quot;:\&quot;handleCloseBet\&quot;,\&quot;method_parameters\&quot;:\&quot;(betId: number)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;number\&quot;,\&quot;name\&quot;:\&quot;betId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[313,4],[342,6]],\&quot;indexes\&quot;:[11611,12819]}]},\&quot;/components/HEROES_CLIENT_CLOSED.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/HEROES_CLIENT_CLOSED.tsx\&quot;,\&quot;file_name\&quot;:\&quot;HEROES_CLIENT_CLOSED.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/index.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/components/index.ts\&quot;,\&quot;file_name\&quot;:\&quot;index.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/info-block.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/info-block.tsx\&quot;,\&quot;file_name\&quot;:\&quot;info-block.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;InfoBlock\&quot;,\&quot;method_parameters\&quot;:\&quot;({ className, title, text, imageUrl })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,7],[41,2]],\&quot;indexes\&quot;:[338,1279]}]},\&quot;/components/profile-button.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/profile-button.tsx\&quot;,\&quot;file_name\&quot;:\&quot;profile-button.tsx\&quot;,\&quot;methods\&quot;:[]},\&quot;/components/profile-form.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/profile-form.tsx\&quot;,\&quot;file_name\&quot;:\&quot;profile-form.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;onSubmit\&quot;,\&quot;method_parameters\&quot;:\&quot;(data: TFormRegisterValues)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;TFormRegisterValues\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[30,4],[46,6]],\&quot;indexes\&quot;:[948,1491]},{\&quot;method_name\&quot;:\&quot;onClickSignOut\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[48,4],[52,6]],\&quot;indexes\&quot;:[1499,1600]}]},\&quot;/components/providers.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/providers.tsx\&quot;,\&quot;file_name\&quot;:\&quot;providers.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Providers\&quot;,\&quot;method_parameters\&quot;:\&quot;({children})\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,7],[49,2]],\&quot;indexes\&quot;:[332,1566]}]},\&quot;/components/rating.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/rating.tsx\&quot;,\&quot;file_name\&quot;:\&quot;rating.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Rating\&quot;,\&quot;method_parameters\&quot;:\&quot;({className, users})\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,7],[34,2]],\&quot;indexes\&quot;:[195,1067]}]},\&quot;/components/required-symbol.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/required-symbol.tsx\&quot;,\&quot;file_name\&quot;:\&quot;required-symbol.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;RequiredSymbol\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[2,7],[4,2]],\&quot;indexes\&quot;:[37,132]}]},\&quot;/components/theme-provider.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/theme-provider.tsx\&quot;,\&quot;file_name\&quot;:\&quot;theme-provider.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ThemeProvider\&quot;,\&quot;method_parameters\&quot;:\&quot;({\\r\\n                                  children,\\r\\n                                  ...props\\r\\n                              }: React.ComponentProps\\u003ctypeof NextThemesProvider\\u003e)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;React.ComponentProps\\u003ctypeof NextThemesProvider\\u003e\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,7],[10,1]],\&quot;indexes\&quot;:[124,400]}]},\&quot;/components/title.tsx\&quot;:{\&quot;file_path\&quot;:\&quot;/components/title.tsx\&quot;,\&quot;file_name\&quot;:\&quot;title.tsx\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Title\&quot;,\&quot;method_parameters\&quot;:\&quot;({ text, size \\u003d \\u0027sm\\u0027, className })\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,7],[35,2]],\&quot;indexes\&quot;:[210,752]}]},\&quot;/hooks/useUser.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/hooks/useUser.ts\&quot;,\&quot;file_name\&quot;:\&quot;useUser.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;useUser\&quot;,\&quot;method_parameters\&quot;:\&quot;(userId: number | null)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;number | null\&quot;,\&quot;name\&quot;:\&quot;userId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,7],[15,1]],\&quot;indexes\&quot;:[171,438]}]},\&quot;/prisma/migrations/20250120093640_add_login_history_field/migration.sql\&quot;:{\&quot;file_path\&quot;:\&quot;/prisma/migrations/20250120093640_add_login_history_field/migration.sql\&quot;,\&quot;file_name\&quot;:\&quot;migration.sql\&quot;,\&quot;methods\&quot;:[]},\&quot;/prisma/constants.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/prisma/constants.ts\&quot;,\&quot;file_name\&quot;:\&quot;constants.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/prisma/prisma-client.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/prisma/prisma-client.ts\&quot;,\&quot;file_name\&quot;:\&quot;prisma-client.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;prismaClientSingleton\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[2,0],[4,2]],\&quot;indexes\&quot;:[50,121]}]},\&quot;/prisma/seed.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/prisma/seed.ts\&quot;,\&quot;file_name\&quot;:\&quot;seed.ts\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;up\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,0],[61,1]],\&quot;indexes\&quot;:[159,1376]},{\&quot;method_name\&quot;:\&quot;down\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[64,0],[69,1]],\&quot;indexes\&quot;:[1382,1730]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[72,0],[79,1]],\&quot;indexes\&quot;:[1736,1852]}]},\&quot;/.eslintrc.json\&quot;:{\&quot;file_path\&quot;:\&quot;/.eslintrc.json\&quot;,\&quot;file_name\&quot;:\&quot;.eslintrc.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/components.json\&quot;:{\&quot;file_path\&quot;:\&quot;/components.json\&quot;,\&quot;file_name\&quot;:\&quot;components.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/package.json\&quot;:{\&quot;file_path\&quot;:\&quot;/package.json\&quot;,\&quot;file_name\&quot;:\&quot;package.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/tailwind.config.ts\&quot;:{\&quot;file_path\&quot;:\&quot;/tailwind.config.ts\&quot;,\&quot;file_name\&quot;:\&quot;tailwind.config.ts\&quot;,\&quot;methods\&quot;:[]},\&quot;/tsconfig.json\&quot;:{\&quot;file_path\&quot;:\&quot;/tsconfig.json\&quot;,\&quot;file_name\&quot;:\&quot;tsconfig.json\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>